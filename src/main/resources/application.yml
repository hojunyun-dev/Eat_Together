server:
  port: 8080

spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:mysql://localhost:3307/eat_together
    username: root
    password: dbsghwns1!
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update # create-drop / create / update / none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  data:
    redis:
      host: 127.0.0.1
      port: 6379

mvc:
  pathmatch:
    matching-strategy: ant_path_matcher

  jackson:
    serialization:
      fail-on-empty-beans: false

sns:
  google:
    url: https://accounts.google.com/o/oauth2/v2/auth
    client:
      id: ${GOOGLE_OAUTH_CLIENT_ID}
      secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
    callback:
      url: http://localhost:8080/social/google/callback
    token:
      url: https://oauth2.googleapis.com/token

  kakao:
    url: https://kauth.kakao.com/oauth/authorize # 카카오 인증 요청 URL
    client:
      id: ${KAKAO_OAUTH_CLIENT_ID}
      secret: ${KAKAO_OAUTH_CLIENT_SECRET}
    callback:
      url: http://localhost:8080/social/kakao/callback
    token:
      url: https://kauth.kakao.com/oauth/token
    user-info-url: https://kapi.kakao.com/v2/user/me
    scope: profile_nickname,profile_image,account_email

  # 네이버 OAuth 속성 추가
  naver:
    url: https://nid.naver.com/oauth2.0/authorize # 네이버 인증 요청 URL
    client:
      id: ${NAVER_OAUTH_CLIENT_ID} # 네이버 개발자 센터에서 발급받은 클라이언트 ID
      secret: ${NAVER_OAUTH_CLIENT_SECRET} # 네이버 개발자 센터에서 발급받은 클라이언트 시크릿
    callback:
      url: http://localhost:8080/social/naver/callback # 네이버 콜백 URI (애플리케이션의 리다이렉트 URI)
    token:
      url: https://nid.naver.com/oauth2.0/token # 네이버 토큰 요청 URL
    user-info-url: https://openapi.naver.com/v1/nid/me # 네이버 사용자 정보 API URL
    state: random_string # CSRF 방지를 위한 임의의 문자열 (필수)


jwt:
  secret: b3b9148e-a9df-42fd-872b-e5e00b944f1c-jwt-secret-test-key
  expiration: 3600000 # 1 hour

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

---

cors:
  allowed-origins: "http://localhost:3000"
  allowed-methods: "*"
  allowed-headers: "*"
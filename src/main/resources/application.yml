server:
  port: 8080

spring:
  datasource:
    # Docker 네트워크 환경에 맞게 localhost를 'mysql' 서비스 이름으로 변경
    url: jdbc:mysql://mysql:${MYSQL_PORT}/eat_together
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update # create-drop / create / update / none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  data:
    redis:
      # Docker 네트워크 환경에 맞게 'redis' 서비스 이름으로 설정
      host: redis
      port: 6379

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  jackson:
    serialization:
      fail-on-empty-beans: false

sns:
  google:
    url: https://accounts.google.com/o/oauth2/v2/auth
    client:
      id: ${GOOGLE_OAUTH_CLIENT_ID}
      secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
    callback:
      url: http://localhost:8080/social/google/callback
    token:
      url: https://oauth2.googleapis.com/token

  kakao:
    url: https://kauth.kakao.com/oauth/authorize
    client:
      id: ${KAKAO_OAUTH_CLIENT_ID}
      secret: ${KAKAO_OAUTH_CLIENT_SECRET}
    callback:
      url: http://localhost:8080/social/kakao/callback
    token:
      url: https://kauth.kakao.com/oauth/token
    user-info-url: https://kapi.kakao.com/v2/user/me
    scope: profile_nickname,profile_image,account_email

  naver:
    url: https://nid.naver.com/oauth2.0/authorize
    client:
      id: ${NAVER_OAUTH_CLIENT_ID}
      secret: ${NAVER_OAUTH_CLIENT_SECRET}
    callback:
      url: http://localhost:8080/social/naver/callback
    token:
      url: https://nid.naver.com/oauth2.0/token
    user-info-url: https://openapi.naver.com/v1/nid/me
    state: random_string

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000 # 1 hour

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
    org.springframework.security: debug
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

elasticsearch:
  uris: http://localhost:9200

---

cors:
  allowed-origins: "http://localhost:3000"
  allowed-methods: "*"
  allowed-headers: "*"